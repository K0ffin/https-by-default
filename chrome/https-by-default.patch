diff --git a/components/toolbar/toolbar_model_impl.cc b/components/toolbar/toolbar_model_impl.cc
index 2d23c24defe2..3795ce4194d9 100644
--- a/components/toolbar/toolbar_model_impl.cc
+++ b/components/toolbar/toolbar_model_impl.cc
@@ -48,7 +48,8 @@ base::string16 ToolbarModelImpl::GetFormattedFullURL() const {
   const base::string16 formatted_text =
       delegate_->FormattedStringWithEquivalentMeaning(
           url, url_formatter::FormatUrl(
-                   url, url_formatter::kFormatUrlOmitDefaults,
+                   url, (url_formatter::kFormatUrlOmitDefaults &
+                         ~url_formatter::kFormatUrlOmitHTTP),
                    net::UnescapeRule::NORMAL, nullptr, nullptr, nullptr));
 
   // Truncating the URL breaks editing and then pressing enter, but hopefully
diff --git a/components/omnibox/browser/autocomplete_input.cc b/components/omnibox/browser/autocomplete_input.cc
index 43fc0dc783d8..1f7e5ce9dee1 100644
--- a/components/omnibox/browser/autocomplete_input.cc
+++ b/components/omnibox/browser/autocomplete_input.cc
@@ -285,6 +285,18 @@ metrics::OmniboxInputType AutocompleteInput::Parse(
   // between an HTTP URL and a query, or the scheme is HTTP or HTTPS, in which
   // case we should reject invalid formulations.
 
+  if (!parts->scheme.is_nonempty() &&
+      base::LowerCaseEqualsASCII(parsed_scheme_utf8, url::kHttpScheme)) {
+    // Scheme was not specified. url_fixer::FixupURL automatically adds http:,
+    // but we want to default to https instead.
+    if (scheme)
+      *scheme = base::ASCIIToUTF16(url::kHttpsScheme);
+    url::Replacements<char> replacements;
+    replacements.SetScheme(url::kHttpsScheme,
+                           url::Component(0, strlen(url::kHttpsScheme)));
+    *canonicalized_url = canonicalized_url->ReplaceComponents(replacements);
+  }
+
   // Determine the host family.  We get this information by (re-)canonicalizing
   // the already-canonicalized host rather than using the user's original input,
   // in case fixup affected the result here (e.g. an input that looks like an
